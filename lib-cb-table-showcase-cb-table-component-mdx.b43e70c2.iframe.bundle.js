/*! For license information please see lib-cb-table-showcase-cb-table-component-mdx.b43e70c2.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkui_kit=self.webpackChunkui_kit||[]).push([[1808],{"./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ck:()=>withMDXComponents,Eh:()=>MDXContext,Iu:()=>MDXProvider,MN:()=>useMDXComponents});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{__webpack_require__("./node_modules/object-assign/index.js");var f=__webpack_require__("./node_modules/react/index.js"),g=60103;if(exports.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element"),exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,k){var b,d={},e=null,l=null;for(b in void 0!==k&&(e=""+k),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./libs/ui-components/src/lib/cb-table/showcase/cb-table.component.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),C_Users_SPHANDA_Desktop_ui_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./libs/ui-components/src/lib/cb-table/showcase/cb-table.component.stories.ts");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",blockquote:"blockquote",h3:"h3",a:"a",h4:"h4",code:"code",pre:"pre",em:"em",h2:"h2",ol:"ol",li:"li",ul:"ul"},(0,C_Users_SPHANDA_Desktop_ui_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.MN)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Qb,{title:"Components/Content Display/Table",of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"table",children:"Table"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Tables are used to organize and display large quantities of data."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Note: Filter Overlay in the Table gets the styles from @ui-kit implicitly."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"specification",children:"Specification"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Check out the table design specification in Marina Design System ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://designsystem.chubb.com/31b252b83/p/294c9e-table",target:"_blank",rel:"nofollow noopener noreferrer",children:"here"}),"."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.h3,{id:"base-library---primeng",children:["Base Library - ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://primeng.org",target:"_blank",rel:"nofollow noopener noreferrer",children:"PrimeNg"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Check out the documentation for PrimeNG Table component ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://primeng.org/table",target:"_blank",rel:"nofollow noopener noreferrer",children:"here"})]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"variants-based-on-cell-style",children:"Variants based on Cell Style"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Check out the table design specification in Marina Design System ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://designsystem.chubb.com/31b252b83/p/294c9e-table/t/63b5e6",target:"_blank",rel:"nofollow noopener noreferrer",children:"here"}),"."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.h4,{id:"import-table-from-primeng",children:["Import ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Table"})," from primeng"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"import { TableModule } from 'primeng/table';\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.h4,{id:"import-table-sort-from-ui-components",children:["Import ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"Table Sort"})," from ui-components"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"If you'd like to utilize sorting, import the CbTableSortModule."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"import { CbTableSortModule } from '@chubb/ui-components';\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"import-styles",children:"Import Styles"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@import '@chubb/ui-components/styles/cb-table';\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.em,{children:["Make sure to import ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://primeng.org/installation#styles",target:"_blank",rel:"nofollow noopener noreferrer",children:"PrimeNg's Theme and Core Styles"})]})}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"@import 'primeng/resources/themes/lara-light-blue/theme.css';\r\n@import 'primeng/resources/primeng.css';\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"add-the-template-code",children:"Add the template code"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"After making the necessary imports, add the template code found above and below in the rendered examples in your template\r\nof choice."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"minimal-table",children:"Minimal Table"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--minimal"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn>Last Name</th>\n          <th pSortableColumn="occupation">\n            Occupation\n            <cb-table-sort field="occupation">\n            </cb-table-sort>\n          </th>\n          <th>User Type</th>\n          <th>Date of Birth</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit-stroke"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.MinimalTable})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"underline-table",children:"Underline Table"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--underline"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn>Last Name</th>\n          <th pSortableColumn>\n            Occupation\n            <cb-table-sort field="occupation">\n            </cb-table-sort>\n          </th>\n          <th>User Type</th>\n          <th>Date of Birth</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit-stroke"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.UnderlineTable})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"fill-table",children:"Fill Table"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--fill"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn>Last Name</th>\n          <th pSortableColumn="occupation">\n            Occupation\n            <cb-table-sort field="occupation">\n            </cb-table-sort>\n          </th>\n          <th>User Type</th>\n          <th>Date of Birth</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit-stroke"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.FillTable})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"variants-based-on-cell-spacing",children:"Variants based on Cell Spacing"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Check out the table design specification in Marina Design System ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://designsystem.chubb.com/31b252b83/p/294c9e-table/t/19f042",target:"_blank",rel:"nofollow noopener noreferrer",children:"here"}),"."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"comfortable-spacing-table",children:"Comfortable Spacing Table"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--fill cb-table--comfortable"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="occupation">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn>Last Name</th>\n          <th pSortableColumn="occupation">\n            Occupation\n            <cb-table-sort field="occupation">\n            </cb-table-sort>\n          </th>\n          <th>User Type</th>\n          <th>Date of Birth</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit-stroke"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.ComfortableSpacingTable})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"compact-spacing-table",children:"Compact Spacing Table"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--fill cb-table--compact"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn>Last Name</th>\n          <th pSortableColumn="occupation">\n            Occupation\n            <cb-table-sort field="occupation">\n            </cb-table-sort>\n          </th>\n          <th>User Type</th>\n          <th>Date of Birth</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit-stroke"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.CompactSpacingTable})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"variants-based-on-cell-text-size",children:"Variants based on Cell Text Size"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Check out the table design specification in Marina Design System ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://designsystem.chubb.com/31b252b83/p/294c9e-table/t/25ccec",target:"_blank",rel:"nofollow noopener noreferrer",children:"here"}),"."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"body-sm-text-sized-table",children:"Body-sm Text Sized Table"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--fill cb-table--sm"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn>Last Name</th>\n          <th pSortableColumn="occupation">\n            Occupation\n            <cb-table-sort field="occupation">\n            </cb-table-sort>\n          </th>\n          <th>User Type</th>\n          <th>Date of Birth</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit-stroke"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.SmallTextBodyTable})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"pagination",children:"Pagination"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Check out the table design specification in Marina Design System ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://designsystem.chubb.com/31b252b83/p/9509a6-pagination",target:"_blank",rel:"nofollow noopener noreferrer",children:"here"}),"."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["We utilize ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-pagination-nav"})," when using pagination. For more information on how to hook up pagination, checkout ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"../?path=/docs/components-navigational-pagination-nav--overview",children:"cb-pagination-nav storybook"})," for more information on this specific component."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["In order to hook up ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-pagination-nav"})," to Table, you must complete several key steps."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Import ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CbNavigationNavModule"})," into the consuming module."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-ts",children:"import { CbPaginationNavModule } from '@chubb/ui-components';\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{start:"2",children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Set the Paginator Property."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Set the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"paginator"})," property on ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"p-table"})," to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"true"}),", this enables pagination."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{start:"3",children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Disable the native Prime NG Paginator"}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Setting the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"paginator"})," property to true will automatically render Prime NG's native paginator element. This element does not adhere to CDS specifications. To disable the rendering of this component add the scss class below."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-scss",children:"// Disables the rendering of Prime NG native Paginator element.\r\n.p-paginator {\r\n  display: none;\r\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{start:"4",children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Add ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-pagination-nav"})," to your template of choice."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"CDS allows the user to place the pagination elements on the top or bottom of the table, with freedom on the spacing between the pagination elements and the table."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Note that we also add the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-items-shown-indicator"})," component below to communicate more item information to the user. In addition, we add ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-page-jumper"})," to quickly jump between pages and\r\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-items-shown-adjustor"})," to quickly changes the rows per page."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--fill"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n      [paginator]="true"\n      [rows]="rows"\n      [first]="first"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn>Last Name</th>\n          <th pSortableColumn="occupation">\n            Occupation\n            <cb-table-sort field="occupation">\n            </cb-table-sort>\n          </th>\n          <th>User Type</th>\n          <th>Date of Birth</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit-stroke"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n\n    <div style="margin-top: 20px; display: flex; justify-content: space-between; align-items: center; ">\n\n      <cb-items-shown-indicator\n        [rows]="rows"\n        [totalRecords]="userData.length"\n        [first]="first"\n      >\n      </cb-items-shown-indicator>\n\n      <cb-page-jumper\n        [rows]="rows"\n        [totalRecords]="userData.length"\n        [first]="first"\n        (paginationChange)="onPaginationEvent($event)"\n      >\n      </cb-page-jumper>\n\n       <cb-items-shown-adjustor\n        [rows]="rows"\n        [totalRecords]="userData.length"\n        [first]="first"\n        (paginationChange)="onPaginationEvent($event)"\n        [rowSelectorOptions]="[5,10]"\n      >\n      </cb-items-shown-adjustor>\n\n      <cb-pagination-nav\n        [rows]="rows"\n        [totalRecords]="userData.length"\n        (paginationChange)="onPaginationEvent($event)"\n        [showFirstPageButton]="true"\n        [showLastPageButton]="true"\n        [caretLabels]="{\n          firstPageButtonLabel: \'First\',\n          previousPageButtonLabel: \'Prev\',\n          nextPageButtonLabel: \'Next\',\n          lastPageButtonLabel: \'Last\'\n        }"\n      >\n      </cb-pagination-nav>\n    </div>\n\n',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.PaginatorTable})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{start:"5",children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Bind the Data and Events."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Taking note of the template code above, we have set the properties of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"rows"}),", and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"first"})," to the same local variable in the consuming component. We have set the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"totalRecords"})," property to the length of the userData field. At a minimum, you must set the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"totalRecords"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"first"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"rows"})," properties for ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-pagination-nav"})," to properly manage pagination."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["In addition, we bind the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"paginationEvent"})," Event to the consuming component by adding ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:'(paginationChange)="onPaginationEvent($event)"'}),". When the user interacts with ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-pagination-nav"})," this component will emit the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"paginationEvent"})," Event. This event contains important information needed to manage pagination. We have also connected this listener to a local method that updates the data fields that we binding. This is crucial to in updating the table. The important ts code is shown below:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-ts",children:"/**\r\n   * First element to show\r\n   */\r\n  first = 0;\r\n  /**\r\n   * Rows to show\r\n   */\r\n  rows = 5;\r\n\r\n\r\nonPaginationEvent(event: PaginatorState): void {\r\n    this.first = event.first as number;\r\n    this.rows = event.rows as number;\r\n  }\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"adding-tooltips",children:"Adding Tooltips"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Check out the table design specification in Marina Design System ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://designsystem.chubb.com/31b252b83/p/294c9e-table",target:"_blank",rel:"nofollow noopener noreferrer",children:"here"}),"."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["You can add a tooltip to the header rows by placing it in the desired header cell. First, import the TooltipModule within the consuming component, read more on this ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://nausp-aapp0001.aceins.com/pages/chubbui-platform/ui-kit/stories/1.3.0/?path=/docs/components-misc-tooltip--overview#import-the-cbtooltipmodule",target:"_blank",rel:"nofollow noopener noreferrer",children:"here"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Next, wrap the header cell text with a span tag, this will allow the cell to be properly styled when you add the tooltip element. For example:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-html",children:"<th>Occupation</th>\r\n// Turns into...\r\n<th>\r\n  <span> Occupation </span>\r\n</th>\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"From here, you can add in the CbToolTip template. Specify the properties to customize your tooltip."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-html",children:'<th>\r\n  <span>\r\n    Occupation\r\n    <cb-tooltip\r\n      explanationText="Underwriter\'s occupation"\r\n      styleVariant="stroke"\r\n      colorTheme="default"\r\n      direction="above-right"\r\n    ></cb-tooltip>\r\n  </span>\r\n</th>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--fill"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn>Last Name</th>\n          <th>\n            <span>\n              Occupation\n              <cb-tooltip\n                explanationText="Underwriter\'s occupation"\n                styleVariant="stroke"\n                colorTheme="default"\n                direction="above-right"\n              ></cb-tooltip>\n            </span>\n          </th>\n          <th>\n            <span>\n              User Type\n              <cb-tooltip\n                explanationText="User type affects the user\'s permissions"\n                styleVariant="stroke"\n                colorTheme="default"\n                direction="above-right"\n              ></cb-tooltip>\n            </span>\n          </th>\n          <th>Date of Birth</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit-stroke"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.WithToolTipsAdded})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"multi-select-filter-variant",children:"Multi Select Filter Variant"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Multi-select allows for basic, selection-based filtering for a specific column. Unlike the advanced ruleset filter which is a Prime NG\r\ncomponent that has been styled as per CDS specifications. Multi Select filter requires specifc module and style imports."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["For more specific, information on the component, read more ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"../?path=/docs/components-content-display-multi-select-filter--overview",children:"here"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["In order to hook up ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-multi-select-filter"})," to Table, you must complete several key steps."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["First import ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"CbMultiSelectFilterModule"})]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-ts",children:"import { CbMultiSelectFilterModule } from '@chubb/ui-components';\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{start:"2",children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Add template"}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Add the template and needed configuration to hook up multi select filter."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-html",children:'// Normal Table Header\r\n<th>Last Name</th>\r\n\r\n// Table Header with Multi Select Filter\r\n<th pResizableColumn pSortableColumn="lastName" tabindex="0">\r\n  <span>\r\n    Last Name\r\n    <p-columnFilter\r\n      field="lastName"\r\n      matchMode="in"\r\n      display="menu"\r\n      [showMatchModes]="false"\r\n      [showOperator]="false"\r\n      [showAddButton]="false"\r\n    >\r\n      <ng-template pTemplate="filter" let-filter="filterCallback">\r\n        <cb-multi-select-filter\r\n          [options]="userData"\r\n          optionLabel="lastName"\r\n          optionValue="lastName"\r\n          [tableReference]="table"\r\n        >\r\n        </cb-multi-select-filter>\r\n      </ng-template>\r\n    </p-columnFilter>\r\n  </span>\r\n</th>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The above contains several parts, lets break it down."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Wrap the header content in a span, this will properly structure the header label and the icon."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Add the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"p-columnFilter"})," element, this helps connect the custom component to the underlying filter logic of Table."]}),"\n"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["We set the field property to the field we will be searching against, that is the context of the column. In this case ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"lastName"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["We set ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"matchMode"})," to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"in"}),", this allows the user to filter with several options. There is also a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"filterMatchMode"})," property you can configure to change the search input behaviour."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"The other properties are required to adhere to CDS spec."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{start:"3",children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Add an ng-template and configure ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"pTemplate"})," and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"let-filter"})," properties as shown above."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Add ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-multi-select-filter"})," and configure its options. The properties configured above represents the minimum required configuration."]}),"\n"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--fill"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n      #table\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn pSortableColumn="lastName" tabindex="0">\n            <span>\n              Last Name\n                <p-columnFilter field="lastName" matchMode="in" display="menu" [showMatchModes]="false" [showOperator]="false" [showAddButton]="false">\n                    <ng-template pTemplate="filter" let-filter="filterCallback">\n                    <cb-multi-select-filter\n                      [options]="userData"\n                      optionLabel="lastName"\n                      optionValue="lastName"\n                      [tableReference]="table"\n                    >\n                    </cb-multi-select-filter>\n                    </ng-template>\n                </p-columnFilter>\n            </span>\n          </th>\n          <th pSortableColumn="occupation">\n            Occupation\n            <cb-table-sort field="occupation">\n            </cb-table-sort>\n          </th>\n          <th>User Type</th>\n          <th>Date of Birth</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit-stroke"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.WithMultiSelectFilter})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"multi-rule-column-filtering",children:"Multi-Rule Column Filtering"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:'PrimeNG provides powerful table filtering capabilities. The "type" property defines the type of input to be used for filtering. It determines how the filter operates on the specified column. The available types are "text" (default), "numeric", "date", and "boolean".'}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"For filtering numbers, simply update the type in the p-column-filter as such:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-html",children:'// Table Header with Numeric Column Filter\r\n<th>\r\n  <span>\r\n    Tenure (Yrs.)\r\n    <p-columnFilter\r\n      type="numeric"\r\n      field="tenure"\r\n      display="menu"\r\n    ></p-columnFilter>\r\n  </span>\r\n</th>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      [ngClass]="tableClasses"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n      [paginator]="tablePaginator"\n      [rows]="rows"\n      [first]="first"\n      [showCurrentPageReport]="true"\n      (onPage)="pageChange($event)"\n      [rowsPerPageOptions]="[2, 5, 10, 25, 50]"\n      [selectionMode]="withCheckboxSelection ? \'multiple\' : \'single\'"\n      #table\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n        <th>\n        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n        </th>\n          <th pFrozenColumn tabindex="0">User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName" [iconColor]="iconColor"></cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn pSortableColumn="lastName" tabindex="0">\n            <span>\n              Last Name\n              <ng-container>\n                <p-columnFilter field="lastName" matchMode="in" display="menu" [showMatchModes]="false" [showOperator]="false" [showAddButton]="false">\n                    <ng-template pTemplate="filter" let-filter="filterCallback">\n                    <cb-multi-select-filter\n                      [options]="userData"\n                      optionLabel="lastName"\n                      optionValue="lastName"\n                      [tableReference]="table"\n                    >\n                    </cb-multi-select-filter>\n                    </ng-template>\n                </p-columnFilter>\n              </ng-container>\n            </span>\n          </th>\n          <th pSortableColumn="occupation">\n            <span>\n            Occupation\n            <cb-table-sort field="occupation" [iconColor]="iconColor"></cb-table-sort>\n            <cb-tooltip\n              explanationText="Underwriter\'s occupation"\n              styleVariant="stroke"\n              colorTheme="default"\n              direction="above-right"\n            >\n              <svg width="16" height="16" viewBox="0.5 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                  <path d="M12.4995 18C12.7798 18 13.015 17.9052 13.205 17.7156C13.395 17.5259 13.49 17.2909 13.49 17.0106C13.49 16.7302 13.3952 16.495 13.2055 16.305C13.0159 16.115 12.7809 16.02 12.5005 16.02C12.2202 16.02 11.985 16.1148 11.795 16.3045C11.605 16.4942 11.51 16.7292 11.51 17.0095C11.51 17.2899 11.6048 17.525 11.7945 17.715C11.9841 17.905 12.2191 18 12.4995 18ZM11.69 13.41H13.49V5.82003H11.69V13.41ZM12.508 24C10.8533 24 9.2983 23.685 7.84298 23.055C6.38766 22.425 5.115 21.565 4.025 20.475C2.935 19.385 2.075 18.1116 1.445 16.6548C0.815 15.198 0.5 13.6414 0.5 11.985C0.5 10.3287 0.815 8.77206 1.445 7.31526C2.075 5.85844 2.935 4.59003 4.025 3.51003C5.115 2.43003 6.38841 1.57503 7.84523 0.945031C9.30203 0.315031 10.8586 3.05176e-05 12.515 3.05176e-05C14.1714 3.05176e-05 15.728 0.315031 17.1848 0.945031C18.6416 1.57503 19.91 2.43003 20.99 3.51003C22.07 4.59003 22.925 5.86003 23.555 7.32003C24.185 8.78003 24.5 10.3374 24.5 11.9921C24.5 13.6467 24.185 15.2017 23.555 16.6571C22.925 18.1124 22.07 19.3832 20.99 20.4695C19.91 21.5558 18.64 22.4158 17.18 23.0495C15.72 23.6832 14.1627 24 12.508 24ZM12.515 22.2C15.345 22.2 17.75 21.205 19.73 19.215C21.71 17.225 22.7 14.815 22.7 11.985C22.7 9.15503 21.7119 6.75003 19.7356 4.77003C17.7594 2.79003 15.3475 1.80003 12.5 1.80003C9.68 1.80003 7.275 2.78815 5.285 4.76439C3.295 6.74065 2.3 9.15253 2.3 12C2.3 14.82 3.295 17.225 5.285 19.215C7.275 21.205 9.685 22.2 12.515 22.2Z" fill="#222222"/>\n              </svg>\n            </cb-tooltip>\n            </span>\n          </th>\n          <th tabindex="0">\n            <span>\n              User Type\n              <cb-tooltip\n                  explanationText="User type affects the user\'s permissions"\n                  styleVariant="stroke"\n                  colorTheme="default"\n                  direction="above-right"\n              >\n              <svg width="16" height="16" viewBox="0.5 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                  <path d="M12.4995 18C12.7798 18 13.015 17.9052 13.205 17.7156C13.395 17.5259 13.49 17.2909 13.49 17.0106C13.49 16.7302 13.3952 16.495 13.2055 16.305C13.0159 16.115 12.7809 16.02 12.5005 16.02C12.2202 16.02 11.985 16.1148 11.795 16.3045C11.605 16.4942 11.51 16.7292 11.51 17.0095C11.51 17.2899 11.6048 17.525 11.7945 17.715C11.9841 17.905 12.2191 18 12.4995 18ZM11.69 13.41H13.49V5.82003H11.69V13.41ZM12.508 24C10.8533 24 9.2983 23.685 7.84298 23.055C6.38766 22.425 5.115 21.565 4.025 20.475C2.935 19.385 2.075 18.1116 1.445 16.6548C0.815 15.198 0.5 13.6414 0.5 11.985C0.5 10.3287 0.815 8.77206 1.445 7.31526C2.075 5.85844 2.935 4.59003 4.025 3.51003C5.115 2.43003 6.38841 1.57503 7.84523 0.945031C9.30203 0.315031 10.8586 3.05176e-05 12.515 3.05176e-05C14.1714 3.05176e-05 15.728 0.315031 17.1848 0.945031C18.6416 1.57503 19.91 2.43003 20.99 3.51003C22.07 4.59003 22.925 5.86003 23.555 7.32003C24.185 8.78003 24.5 10.3374 24.5 11.9921C24.5 13.6467 24.185 15.2017 23.555 16.6571C22.925 18.1124 22.07 19.3832 20.99 20.4695C19.91 21.5558 18.64 22.4158 17.18 23.0495C15.72 23.6832 14.1627 24 12.508 24ZM12.515 22.2C15.345 22.2 17.75 21.205 19.73 19.215C21.71 17.225 22.7 14.815 22.7 11.985C22.7 9.15503 21.7119 6.75003 19.7356 4.77003C17.7594 2.79003 15.3475 1.80003 12.5 1.80003C9.68 1.80003 7.275 2.78815 5.285 4.76439C3.295 6.74065 2.3 9.15253 2.3 12C2.3 14.82 3.295 17.225 5.285 19.215C7.275 21.205 9.685 22.2 12.515 22.2Z" fill="#222222"/>\n              </svg>\n            </cb-tooltip>\n            </span>\n          </th>\n          <th tabindex="0">Date of Birth</th>\n          <th tabindex="0">Receive Emails</th>\n          <th tabindex="0">\n            <span>\n              Tenure\n              <ng-container>\n                <p-columnFilter\n                  type="numeric"\n                  field="tenure"\n                  display="menu"\n                ></p-columnFilter>\n              </ng-container>\n            </span>\n          </th>\n          <th tabindex="0">User Report</th>\n          <th tabindex="0">Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td>\n            <p-tableCheckbox [value]="user" tabindex="0"></p-tableCheckbox>\n          </td>\n          <td tabindex="0">{{ user.userId }}</td>\n          <td tabindex="0">{{ user.firstName }}</td>\n          <td tabindex="0">{{ user.lastName }}</td>\n          <td tabindex="0">{{ user.occupation }}</td>\n          <td tabindex="0">{{ user.userType }}</td>\n          <td tabindex="0">{{ getDate(user.dob) }}</td>\n          <td tabindex="0">{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td tabindex="0">{{ user.tenure }}</td>\n          <td tabindex="0" pFrozenColumn>\n            <a href="path_to_file" download>\n              <cb-icon\n                  iconKey="utility-document"\n                  [iconColor]="\'inline-link-default\'"\n                  [addPointerClass]="true"\n                  [iconColor]="iconColor"\n              ></cb-icon>\n              User Report\n            </a>\n          </td>\n          <td tabindex="0">\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit"\n                [iconColor]="iconColor"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="iconColor"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n\n    <div style="margin-top: 20px; display: flex; justify-content: space-between; align-items: center; ">\n      <cb-items-shown-indicator\n        [rows]="rows"\n        [totalRecords]="userData.length"\n        [first]="first"\n      >\n      </cb-items-shown-indicator>\n\n      <cb-page-jumper\n        [rows]="rows"\n        [totalRecords]="userData.length"\n        [first]="first"\n        (paginationChange)="onPaginationEvent($event)"\n      >\n      </cb-page-jumper>\n\n      <cb-items-shown-adjustor\n        [rows]="rows"\n        [totalRecords]="userData.length"\n        [first]="first"\n        (paginationChange)="onPaginationEvent($event)"\n        [rowSelectorOptions]="[5,10]"\n      >\n      </cb-items-shown-adjustor>\n\n      <cb-pagination-nav\n        [rows]="rows"\n        [first]="first"\n        [totalRecords]="userData.length"\n        (paginationChange)="onPaginationEvent($event)"\n        [showFirstPageButton]="true"\n        [showLastPageButton]="true"\n        [caretLabels]="{\n          firstPageButtonLabel: \'First\',\n          previousPageButtonLabel: \'Prev\',\n          nextPageButtonLabel: \'Next\',\n          lastPageButtonLabel: \'Last\'\n        }"\n      >\n      </cb-pagination-nav>\n    </div>\n\n',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.WithNumericColumnFilter})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Date Column Filtering:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"To enable filtering for date columns, follow these steps:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Update the type of the column to 'date'. In the p-calendar element, include the [cbDateInputV2] directive, bind using [(ngModel)]=\"date\", and provide a corresponding name attribute."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-html",children:'// Table Header with Date Column Filter\r\n <th>\r\n    <span>Date of Birth\r\n    <p-columnFilter\r\n      type="date"\r\n      field="dob"\r\n      display="menu"\r\n    >\r\n      <ng-template pTemplate="filter" let-filter="filterCallback">\r\n        <p-calendar\r\n          [cbDateInputV2]\r\n          [(ngModel)]="date"\r\n          (ngModelChange)="updateFilterRule()"\r\n          name="date"\r\n          variant="default"\r\n          helperText=""\r\n          label=""\r\n          placeholder="mm/dd/yyyy"\r\n        ></p-calendar>\r\n      </ng-template>\r\n    </p-columnFilter>\r\n    </span>\r\n  </th>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{start:"2",children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Inside your component class, use the @ViewChild decorator to access both the calendar and table."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-javascript",children:"@ViewChild(NgControl) dateControl: NgControl;\r\n@ViewChild('table') table: Table | null;\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ol,{start:"3",children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"Add the ngAfterViewInit() and updateFilterRule() functions to handle date value changes and column filter updates."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-javascript",children:"   ngAfterViewInit(): void {\r\n    this.dateControl?.valueChanges?.pipe(\r\n      untilDestroyed(this))\r\n      .subscribe(() => {\r\n        this.updateFilterRule();\r\n      });\r\n    }\r\n  \r\n  updateFilterRule(): void {\r\n    if (this.table) {\r\n      const filter = this.table.filters['dob'];\r\n    if (Array.isArray(filter)) {\r\n        filter[0].value = this.dateControl.value;\r\n      }\r\n    }\r\n  }\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      [ngClass]="tableClasses"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n      [paginator]="tablePaginator"\n      [rows]="rows"\n      [first]="first"\n      [showCurrentPageReport]="true"\n      (onPage)="pageChange($event)"\n      [rowsPerPageOptions]="[2, 5, 10, 25, 50]"\n      [selectionMode]="withCheckboxSelection ? \'multiple\' : \'single\'"\n      #table\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n        <th>\n        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n        </th>\n          <th pFrozenColumn tabindex="0">User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName" [iconColor]="iconColor"></cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn pSortableColumn="lastName" tabindex="0">\n            <span>\n              Last Name\n              <ng-container>\n                <p-columnFilter field="lastName" matchMode="in" display="menu" [showMatchModes]="false" [showOperator]="false" [showAddButton]="false">\n                    <ng-template pTemplate="filter" let-filter="filterCallback">\n                    <cb-multi-select-filter\n                      [options]="userData"\n                      optionLabel="lastName"\n                      optionValue="lastName"\n                      [tableReference]="table"\n                    >\n                    </cb-multi-select-filter>\n                    </ng-template>\n                </p-columnFilter>\n              </ng-container>\n            </span>\n          </th>\n          <th pSortableColumn="occupation">\n            <span>\n            Occupation\n            <cb-table-sort field="occupation" [iconColor]="iconColor"></cb-table-sort>\n            <cb-tooltip\n              explanationText="Underwriter\'s occupation"\n              styleVariant="stroke"\n              colorTheme="default"\n              direction="above-right"\n            >\n              <svg width="16" height="16" viewBox="0.5 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                  <path d="M12.4995 18C12.7798 18 13.015 17.9052 13.205 17.7156C13.395 17.5259 13.49 17.2909 13.49 17.0106C13.49 16.7302 13.3952 16.495 13.2055 16.305C13.0159 16.115 12.7809 16.02 12.5005 16.02C12.2202 16.02 11.985 16.1148 11.795 16.3045C11.605 16.4942 11.51 16.7292 11.51 17.0095C11.51 17.2899 11.6048 17.525 11.7945 17.715C11.9841 17.905 12.2191 18 12.4995 18ZM11.69 13.41H13.49V5.82003H11.69V13.41ZM12.508 24C10.8533 24 9.2983 23.685 7.84298 23.055C6.38766 22.425 5.115 21.565 4.025 20.475C2.935 19.385 2.075 18.1116 1.445 16.6548C0.815 15.198 0.5 13.6414 0.5 11.985C0.5 10.3287 0.815 8.77206 1.445 7.31526C2.075 5.85844 2.935 4.59003 4.025 3.51003C5.115 2.43003 6.38841 1.57503 7.84523 0.945031C9.30203 0.315031 10.8586 3.05176e-05 12.515 3.05176e-05C14.1714 3.05176e-05 15.728 0.315031 17.1848 0.945031C18.6416 1.57503 19.91 2.43003 20.99 3.51003C22.07 4.59003 22.925 5.86003 23.555 7.32003C24.185 8.78003 24.5 10.3374 24.5 11.9921C24.5 13.6467 24.185 15.2017 23.555 16.6571C22.925 18.1124 22.07 19.3832 20.99 20.4695C19.91 21.5558 18.64 22.4158 17.18 23.0495C15.72 23.6832 14.1627 24 12.508 24ZM12.515 22.2C15.345 22.2 17.75 21.205 19.73 19.215C21.71 17.225 22.7 14.815 22.7 11.985C22.7 9.15503 21.7119 6.75003 19.7356 4.77003C17.7594 2.79003 15.3475 1.80003 12.5 1.80003C9.68 1.80003 7.275 2.78815 5.285 4.76439C3.295 6.74065 2.3 9.15253 2.3 12C2.3 14.82 3.295 17.225 5.285 19.215C7.275 21.205 9.685 22.2 12.515 22.2Z" fill="#222222"/>\n              </svg>\n            </cb-tooltip>\n            </span>\n          </th>\n          <th tabindex="0">\n            <span>\n              User Type\n              <cb-tooltip\n                  explanationText="User type affects the user\'s permissions"\n                  styleVariant="stroke"\n                  colorTheme="default"\n                  direction="above-right"\n              >\n              <svg width="16" height="16" viewBox="0.5 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                  <path d="M12.4995 18C12.7798 18 13.015 17.9052 13.205 17.7156C13.395 17.5259 13.49 17.2909 13.49 17.0106C13.49 16.7302 13.3952 16.495 13.2055 16.305C13.0159 16.115 12.7809 16.02 12.5005 16.02C12.2202 16.02 11.985 16.1148 11.795 16.3045C11.605 16.4942 11.51 16.7292 11.51 17.0095C11.51 17.2899 11.6048 17.525 11.7945 17.715C11.9841 17.905 12.2191 18 12.4995 18ZM11.69 13.41H13.49V5.82003H11.69V13.41ZM12.508 24C10.8533 24 9.2983 23.685 7.84298 23.055C6.38766 22.425 5.115 21.565 4.025 20.475C2.935 19.385 2.075 18.1116 1.445 16.6548C0.815 15.198 0.5 13.6414 0.5 11.985C0.5 10.3287 0.815 8.77206 1.445 7.31526C2.075 5.85844 2.935 4.59003 4.025 3.51003C5.115 2.43003 6.38841 1.57503 7.84523 0.945031C9.30203 0.315031 10.8586 3.05176e-05 12.515 3.05176e-05C14.1714 3.05176e-05 15.728 0.315031 17.1848 0.945031C18.6416 1.57503 19.91 2.43003 20.99 3.51003C22.07 4.59003 22.925 5.86003 23.555 7.32003C24.185 8.78003 24.5 10.3374 24.5 11.9921C24.5 13.6467 24.185 15.2017 23.555 16.6571C22.925 18.1124 22.07 19.3832 20.99 20.4695C19.91 21.5558 18.64 22.4158 17.18 23.0495C15.72 23.6832 14.1627 24 12.508 24ZM12.515 22.2C15.345 22.2 17.75 21.205 19.73 19.215C21.71 17.225 22.7 14.815 22.7 11.985C22.7 9.15503 21.7119 6.75003 19.7356 4.77003C17.7594 2.79003 15.3475 1.80003 12.5 1.80003C9.68 1.80003 7.275 2.78815 5.285 4.76439C3.295 6.74065 2.3 9.15253 2.3 12C2.3 14.82 3.295 17.225 5.285 19.215C7.275 21.205 9.685 22.2 12.515 22.2Z" fill="#222222"/>\n              </svg>\n            </cb-tooltip>\n            </span>\n          </th>\n          <th>\n            <span>Date of Birth\n            <p-columnFilter\n              type="date"\n              field="dob"\n              display="menu"\n            >\n              <ng-template pTemplate="filter" let-filter="filterCallback">\n                <p-calendar\n                  [cbDateInputV2]\n                  [(ngModel)]="date"\n                  variant="default"\n                  helperText=""\n                  label=""\n                  placeholder="mm/dd/yyyy"\n                ></p-calendar>\n              </ng-template>\n            </p-columnFilter>\n            </span>\n          </th>\n          <th tabindex="0">Receive Emails</th>\n          <th tabindex="0">Tenure</th>\n          <th tabindex="0">User Report</th>\n          <th tabindex="0">Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td>\n            <p-tableCheckbox [value]="user" tabindex="0"></p-tableCheckbox>\n          </td>\n          <td tabindex="0">{{ user.userId }}</td>\n          <td tabindex="0">{{ user.firstName }}</td>\n          <td tabindex="0">{{ user.lastName }}</td>\n          <td tabindex="0">{{ user.occupation }}</td>\n          <td tabindex="0">{{ user.userType }}</td>\n          <td tabindex="0">{{ getDate(user.dob) }}</td>\n          <td tabindex="0">{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td tabindex="0">{{ user.tenure }}</td>\n          <td tabindex="0" pFrozenColumn>\n            <a href="path_to_file" download>\n              <cb-icon\n                  iconKey="utility-document"\n                  [iconColor]="\'inline-link-default\'"\n                  [addPointerClass]="true"\n                  [iconColor]="iconColor"\n              ></cb-icon>\n              User Report\n            </a>\n          </td>\n          <td tabindex="0">\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit"\n                [iconColor]="iconColor"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="iconColor"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n\n    <div style="margin-top: 20px; display: flex; justify-content: space-between; align-items: center; ">\n      <cb-items-shown-indicator\n        [rows]="rows"\n        [totalRecords]="userData.length"\n        [first]="first"\n      >\n      </cb-items-shown-indicator>\n\n      <cb-page-jumper\n        [rows]="rows"\n        [totalRecords]="userData.length"\n        [first]="first"\n        (paginationChange)="onPaginationEvent($event)"\n      >\n      </cb-page-jumper>\n\n      <cb-items-shown-adjustor\n        [rows]="rows"\n        [totalRecords]="userData.length"\n        [first]="first"\n        (paginationChange)="onPaginationEvent($event)"\n        [rowSelectorOptions]="[5,10]"\n      >\n      </cb-items-shown-adjustor>\n\n      <cb-pagination-nav\n        [rows]="rows"\n        [first]="first"\n        [totalRecords]="userData.length"\n        (paginationChange)="onPaginationEvent($event)"\n        [showFirstPageButton]="true"\n        [showLastPageButton]="true"\n        [caretLabels]="{\n          firstPageButtonLabel: \'First\',\n          previousPageButtonLabel: \'Prev\',\n          nextPageButtonLabel: \'Next\',\n          lastPageButtonLabel: \'Last\'\n        }"\n      >\n      </cb-pagination-nav>\n    </div>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.WithDateColumnFilter})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"theming",children:"Theming"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Depending on specific products, certain elements of the Table may be themed to a brand color. Color theming is currently supported for header cell border stroke, filter/sort operators, and action icons."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"theming-the-header-cell-stroke-and-filter-icon",children:"Theming the Header Cell Stroke and Filter icon"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["To theme the header cell stroke and filter icon, add a themed class in addition to the base ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-table"})," class."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The available classes include:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-scss",children:".cb-table--blue,\r\n.cb-table--magenta,\r\n.cb-table--yellow,\r\n.cb-table--green,\r\n.cb-table--turquoise,\r\n.cb-table--purple,\r\n.cb-table--white\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-html",children:'<th>\r\n  <span>\r\n    Occupation\r\n    <cb-tooltip\r\n      explanationText="Underwriter\'s occupation"\r\n      styleVariant="stroke"\r\n      colorTheme="default"\r\n      direction="above-right"\r\n    ></cb-tooltip>\r\n  </span>\r\n</th>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"theming-sort-and-action-icons",children:"Theming Sort and Action Icons"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Sort icons use the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-table-sort"})," component, which utilizes ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-icon"}),". Action icons utilize ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-icon"}),". To change the color of these components, simply set the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"iconColor"})," property to your desired color."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-html",children:'<cb-table-sort field="occupation" iconColor="blue-700"> </cb-table-sort>\r\n\r\n<cb-icon\r\n  iconKey="utility-edit-stroke"\r\n  iconColor="blue-700"\r\n  [addPointerClass]="true"\r\n></cb-icon>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--blue"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName" iconColor="blue-700">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn>Last Name</th>\n          <th>\n            <span>\n              Occupation\n              <cb-table-sort field="occupation" iconColor="blue-700">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th>\n            <span>\n              User Type\n            </span>\n          </th>\n          <th>Date of Birth</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit-stroke"\n                [iconColor]="\'blue-700\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'blue-700\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.ThemedTable})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"hover-state",children:"Hover State"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["As default, Table does not have a hover state styles. You may choose to add hover states at the cell level or at the row level if you wish by adding either ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-table--cell-hover"})," or ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-table--row-hover"})," in addition to the base ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"cb-table"})," class."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--underline cb-table--cell-hover"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn>Last Name</th>\n          <th pSortableColumn>\n            Occupation\n            <cb-table-sort field="occupation">\n            </cb-table-sort>\n          </th>\n          <th>User Type</th>\n          <th>Date of Birth</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit-stroke"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.CellHover})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"inline-edit",children:"Inline Edit"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h4,{id:"note",children:"Note"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"At the moment, we only provide editing support for text fields. However, we plan to incorporate editing for other types in the near future.\r\nIn addition, it is recommended to use a modal and utilize uikit components to update and retrieve the desired date and select choice values. This approach will ensure a seamless process for updating and obtaining the updated values."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"cell-editable-state",children:"Cell Editable State"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"As default, Table does not have a editable cell state. You may choose to add edit states at the cell level or at the row level if you wish."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"You will have to add p-cellEditor tag to make it editable depending on conditions if it is to be editable or not."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:'<td\r\n  tabindex="0"\r\n  [pEditableColumn]="user.maritalStatus"\r\n  pEditableColumnField="maritalStatus"\r\n  *ngIf="isCellEditable"\r\n>\r\n  <p-cellEditor>\r\n    <ng-template pTemplate="input">\r\n      <input\r\n        pInputText\r\n        type="text"\r\n        [(ngModel)]="user.maritalStatus"\r\n        required\r\n        style="outline: none; border: 0; background: none;"\r\n      />\r\n    </ng-template>\r\n    <ng-template pTemplate="output">\r\n      {{ user.maritalStatus }}\r\n    </ng-template>\r\n  </p-cellEditor>\r\n</td>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["For instance, wehave made ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"maritalStatus"})," column to be editable as shown below. When we click on the cell it will change to editable cell."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--underline"\n      [value]="userData"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th pResizableColumn pSortableColumn="firstName">\n            <span>\n              First Name\n              <p-columnFilter\n                type="text"\n                field="firstName"\n                display="menu"\n              ></p-columnFilter>\n              <cb-table-sort field="firstName">\n              </cb-table-sort>\n            </span>\n          </th>\n          <th pResizableColumn>Last Name</th>\n          <th pSortableColumn>\n            Occupation\n            <cb-table-sort field="occupation">\n            </cb-table-sort>\n          </th>\n          <th>User Type</th>\n          <th>Date of Birth</th>\n          <th *ngIf="isCellEditable">Marital Status</th>\n          <th>Receive Emails</th>\n          <th>Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate="body" let-user>\n        <tr>\n          <td pFrozenColumn>{{ user.userId }}</td>\n          <td>{{ user.firstName }}</td>\n          <td>{{ user.lastName }}</td>\n          <td>{{ user.occupation }}</td>\n          <td>{{ user.userType }}</td>\n          <td>{{ getDate(user.dob) }}</td>\n          <td\n            tabindex="0"\n            [pEditableColumn]="user.maritalStatus"\n            pEditableColumnField="maritalStatus"\n            *ngIf="isCellEditable"\n          >\n            <p-cellEditor>\n              <ng-template pTemplate="input">\n                <input\n                  pInputText\n                  type="text"\n                  [(ngModel)]="user.maritalStatus"\n                  required\n                  style="outline: none; border: 0; background: none;"\n                />\n              </ng-template>\n              <ng-template pTemplate="output">\n                {{ user.maritalStatus }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n          <td>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</td>\n          <td>\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.CellEditable})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"row-editable-state",children:"Row Editable State"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"As default, Table does not have a editable row state. You may choose to add edit states at the row level if you wish."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"You will have to add p-cellEditor tag to make it editable depending on conditions if it is to be editable or not."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Refer to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://primeng.org/table#row-edit",target:"_blank",rel:"nofollow noopener noreferrer",children:"primeng row edit"})]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["When we click on the edit icon, it should make entire row as editable. It can be made editable by adding ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"p-cellEditor"})," to each column and replace template based on input."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.gF,{mdxSource:'\n    <p-table\n      class="cb-table cb-table--underline"\n      [value]="user"\n      [editMode]="\'row\'"\n      [resizableColumns]="true"\n      [scrollable]="true"\n      [globalFilterFields]="[\'firstName\']"\n      columnResizeMode="expand"\n    >\n      <ng-template pTemplate="caption"> </ng-template>\n      <ng-template pTemplate="header">\n        <tr>\n          <th pFrozenColumn>User ID</th>\n          <th tabindex="0">\n            First Name\n          </th>\n          <th tabindex="0"> Last Name\n          </th>\n          <th>\n            Occupation\n          </th>\n          <th tabindex="0">\n            <span>\n              User Type\n            </span>\n          </th>\n          <th tabindex="0">Date of Birth</th>\n          <th tabindex="0">Receive Emails</th>\n          <th tabindex="0">\n            <span>\n              Tenure (Yrs.)\n            </span>\n          </th>\n          <th tabindex="0">Actions</th>\n        </tr>\n      </ng-template>\n      <ng-template\n        pTemplate="body"\n        let-user\n        let-ri="rowIndex"\n      >\n        <tr [pEditableRow]="user">\n          <td tabindex="0">{{ user.userId }}</td>\n          <td tabindex="0" *ngIf="!user.editing">{{ user.firstName }}</td>\n          <td tabindex="0" *ngIf="user.editing">\n            <p-cellEditor>\n              <ng-template pTemplate="input">\n                <input\n                  pInputText\n                  type="text"\n                  [(ngModel)]="user.firstName"\n                />\n              </ng-template>\n              <ng-template pTemplate="output">\n                {{ user.firstName }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n          <td tabindex="0" *ngIf="!user.editing">{{ user.lastName }}</td>\n          <td tabindex="0" *ngIf="user.editing">\n            <p-cellEditor>\n              <ng-template pTemplate="input">\n                <input\n                  pInputText\n                  type="text"\n                  [(ngModel)]="user.lastName"\n                />\n              </ng-template>\n              <ng-template pTemplate="output">\n                {{ user.lastName }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n          <td tabindex="0" *ngIf="!user.editing">{{ user.occupation }}</td>\n          <td tabindex="0" *ngIf="user.editing">\n            <p-cellEditor>\n              <ng-template pTemplate="input">\n                <input\n                  pInputText\n                  type="text"\n                  [(ngModel)]="user.occupation"\n                />\n              </ng-template>\n              <ng-template pTemplate="output">\n                {{ user.occupation }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n          <td tabindex="0" *ngIf="!user.editing">{{ user.userType }}</td>\n          <td tabindex="0" *ngIf="user.editing">\n            <p-cellEditor>\n              <ng-template pTemplate="input">\n                <input\n                  pInputText\n                  type="text"\n                  [(ngModel)]="user.userType"\n                />\n              </ng-template>\n              <ng-template pTemplate="output">\n                {{ user.userType }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n          <td tabindex="0">{{ getDate(user.dob) }}</td>\n          <td tabindex="0" *ngIf="!user.editing">\n            {{ user.receiveEmails ? \'Yes\' : \'No\' }}\n          </td>\n          <td tabindex="0" *ngIf="user.editing">\n            <p-cellEditor>\n              <ng-template pTemplate="input">\n                <select\n                  [(ngModel)]="user.receiveEmails"\n                >\n                  <option [ngValue]="true">Yes</option>\n                  <option [ngValue]="false">No</option>\n                </select>\n              </ng-template>\n              <ng-template pTemplate="output">\n                <span>{{ user.receiveEmails ? \'Yes\' : \'No\' }}</span>\n              </ng-template>\n            </p-cellEditor>\n          </td>\n          <td tabindex="0" *ngIf="!user.editing">{{ user.tenure }}</td>\n          <td tabindex="0" *ngIf="user.editing">\n            <p-cellEditor>\n              <ng-template pTemplate="input">\n                <input\n                  pInputText\n                  type="number"\n                  [(ngModel)]="user.tenure"\n                />\n              </ng-template>\n              <ng-template pTemplate="output">\n                {{ user.tenure }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n          <td tabindex="0">\n            <span class="cb-table-actions">\n              <cb-icon\n                iconKey="utility-edit"\n                [iconColor]="\'white-800\'"\n                [addPointerClass]="true"\n                *ngIf="!user.editing"\n                (click)="onRowEditInit(user)"\n                pInitEditableRow\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-check"\n                [iconColor]="\'success-shade\'"\n                [addPointerClass]="true"\n                *ngIf="user.editing"\n                (click)="onRowEditSave(user)"\n                pSaveEditableRow\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-close"\n                [iconColor]="\'error-shade\'"\n                [addPointerClass]="true"\n                *ngIf="user.editing"\n                (click)="onRowEditCancel(user, ri)"\n                pCancelEditableRow\n              ></cb-icon>\n              <cb-icon\n                iconKey="utility-ellipses-vt"\n                [addPointerClass]="true"\n              ></cb-icon>\n            </span>\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  ',children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__._W,{of:_cb_table_component_stories__WEBPACK_IMPORTED_MODULE_4__.RowEditable})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.blockquote,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Below is the sample code for making row editable. It can be done in various ways depending on the requirement."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { PaginatorState } from '../../common/models/paginator-state';\r\n\r\n@Component({\r\n  selector: 'ui-components-cb-table-showcase',\r\n  template: `\r\n    <p-table\r\n      class=\"cb-table cb-table--underline\"\r\n      [value]=\"userData\"\r\n      [editMode]=\"'row'\"\r\n      [resizableColumns]=\"true\"\r\n      [scrollable]=\"true\"\r\n      [globalFilterFields]=\"['firstName']\"\r\n      columnResizeMode=\"expand\"\r\n    >\r\n      <ng-template pTemplate=\"caption\"> </ng-template>\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th pFrozenColumn>User ID</th>\r\n          <th tabindex=\"0\">\r\n            First Name\r\n          </th>\r\n          <th tabindex=\"0\"> Last Name\r\n          </th>\r\n          <th>\r\n            Occupation\r\n          </th>\r\n          <th tabindex=\"0\">\r\n            <span>\r\n              User Type\r\n            </span>\r\n          </th>\r\n          <th tabindex=\"0\">Date of Birth</th>\r\n          <th tabindex=\"0\">Receive Emails</th>\r\n          <th tabindex=\"0\">\r\n            <span>\r\n              Tenure (Yrs.)\r\n            </span>\r\n          </th>\r\n          <th tabindex=\"0\">Actions</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template\r\n        pTemplate=\"body\"\r\n        let-user\r\n        let-ri=\"rowIndex\"\r\n      >\r\n        <tr [pEditableRow]=\"user\">\r\n          <td tabindex=\"0\">{{ user.userId }}</td>\r\n          <td tabindex=\"0\" *ngIf=\"!user.editing\">{{ user.firstName }}</td>\r\n          <td tabindex=\"0\" *ngIf=\"user.editing\">\r\n            <p-cellEditor>\r\n              <ng-template pTemplate=\"input\">\r\n                <input pInputText type=\"text\" [(ngModel)]=\"user.firstName\" />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{ user.firstName }}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n          </td>\r\n          <td tabindex=\"0\" *ngIf=\"!user.editing\">{{ user.lastName }}</td>\r\n          <td tabindex=\"0\" *ngIf=\"user.editing\">\r\n          <p-cellEditor>\r\n              <ng-template pTemplate=\"input\">\r\n                  <input pInputText type=\"text\" [(ngModel)]=\"user.lastName\" style=\"outline: none; border: 0; background: none;\">\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                  {{user.lastName}}\r\n              </ng-template>\r\n          </p-cellEditor>\r\n          </td>\r\n          <td tabindex=\"0\" *ngIf=\"!user.editing\">{{ user.occupation }}</td>\r\n          <td tabindex=\"0\" *ngIf=\"user.editing\">\r\n            <p-cellEditor>\r\n              <ng-template pTemplate=\"input\">\r\n                <input pInputText type=\"text\" [(ngModel)]=\"user.occupation\" />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{ user.occupation }}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n          </td>\r\n          <td tabindex=\"0\" *ngIf=\"!user.editing\">{{ user.userType }}</td>\r\n          <td tabindex=\"0\" *ngIf=\"user.editing\">\r\n            <p-cellEditor>\r\n              <ng-template pTemplate=\"input\">\r\n                <input pInputText type=\"text\" [(ngModel)]=\"user.userType\" />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{ user.userType }}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n          </td>\r\n          <td tabindex=\"0\">{{ getDate(user.dob) }}</td>\r\n          <td tabindex=\"0\">\r\n            {{ user.receiveEmails ? 'Yes' : 'No' }}\r\n          </td>\r\n          <td tabindex=\"0\" *ngIf=\"!user.editing\">{{ user.tenure }}</td>\r\n          <td tabindex=\"0\" *ngIf=\"user.editing\">\r\n            <p-cellEditor>\r\n              <ng-template pTemplate=\"input\">\r\n                <input pInputText type=\"number\" [(ngModel)]=\"user.tenure\" />\r\n              </ng-template>\r\n              <ng-template pTemplate=\"output\">\r\n                {{ user.tenure }}\r\n              </ng-template>\r\n            </p-cellEditor>\r\n          </td>\r\n          <td tabindex=\"0\">\r\n            <span class=\"cb-table-actions\">\r\n              <cb-icon\r\n                iconKey=\"utility-edit\"\r\n                [iconColor]=\"'white-800'\"\r\n                [addPointerClass]=\"true\"\r\n                *ngIf=\"!user.editing\"\r\n                (click)=\"onRowEditInit(user)\"\r\n                pInitEditableRow\r\n              ></cb-icon>\r\n              <cb-icon\r\n                iconKey=\"utility-check\"\r\n                [iconColor]=\"'success-shade'\"\r\n                [addPointerClass]=\"true\"\r\n                *ngIf=\"user.editing\"\r\n                (click)=\"onRowEditSave(user)\"\r\n                pSaveEditableRow\r\n              ></cb-icon>\r\n              <cb-icon\r\n                iconKey=\"utility-close\"\r\n                [iconColor]=\"'error-shade'\"\r\n                [addPointerClass]=\"true\"\r\n                *ngIf=\"user.editing\"\r\n                (click)=\"onRowEditCancel(user, ri)\"\r\n                pCancelEditableRow\r\n              ></cb-icon>\r\n              <cb-icon\r\n                iconKey=\"utility-ellipses-vt\"\r\n                [addPointerClass]=\"true\"\r\n              ></cb-icon>\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  `,\r\n  styleUrls: ['./cb-table-showcase.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class CbTableShowcaseComponent {\r\n  /**\r\n   * Classes to be applied\r\n   */\r\n  @Input() editing: boolean;\r\n  /**\r\n   * First element to show\r\n   */\r\n  first: number | undefined = 0;\r\n  /**\r\n   * Rows to show\r\n   */\r\n  rows: number | undefined = 5;\r\n\r\n  editableUsers: { [s: string]: User } = {};\r\n  /**\r\n   * Sample user data\r\n   */\r\n  userData: User[] = [\r\n    {\r\n      userId: 'uvngkh',\r\n      firstName: 'Oliver',\r\n      lastName: 'Smith',\r\n      maritalStatus: 'married',\r\n      occupation: 'Underwriter',\r\n      userType: 'Chubb Employee',\r\n      tenure: 2,\r\n      dob: new Date(2000, 1, 2),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'msbrlg',\r\n      firstName: 'Jack',\r\n      lastName: 'Williams',\r\n      maritalStatus: 'married',\r\n      occupation: 'Agent',\r\n      userType: 'Chubb Employee',\r\n      tenure: 1,\r\n      dob: new Date(1998, 11, 21),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'kapnnj',\r\n      firstName: 'Charles',\r\n      lastName: 'Jones',\r\n      maritalStatus: 'married',\r\n      occupation: 'Broker',\r\n      userType: 'TPA',\r\n      tenure: 2,\r\n      dob: new Date(1995, 10, 12),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'gygmog',\r\n      firstName: 'William',\r\n      lastName: 'Wilson',\r\n      maritalStatus: 'married',\r\n      occupation: 'Adjuster',\r\n      userType: 'TPA',\r\n      tenure: 1,\r\n      dob: new Date(1992, 4, 16),\r\n      receiveEmails: false,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'iuwjah',\r\n      firstName: 'Oliver',\r\n      lastName: 'Smith',\r\n      maritalStatus: 'married',\r\n      occupation: 'Underwriter',\r\n      userType: 'Chubb Employee',\r\n      tenure: 2,\r\n      dob: new Date(2000, 1, 2),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'osness',\r\n      firstName: 'Jack',\r\n      lastName: 'Williams',\r\n      maritalStatus: 'married',\r\n      occupation: 'Agent',\r\n      userType: 'Chubb Employee',\r\n      tenure: 4,\r\n      dob: new Date(1998, 11, 21),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'pskewu',\r\n      firstName: 'Charles',\r\n      lastName: 'Jones',\r\n      maritalStatus: 'married',\r\n      occupation: 'Broker',\r\n      userType: 'TPA',\r\n      dob: new Date(1995, 10, 12),\r\n      tenure: 2,\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'tywhjs',\r\n      firstName: 'William',\r\n      lastName: 'Wilson',\r\n      maritalStatus: 'married',\r\n      occupation: 'Adjuster',\r\n      userType: 'TPA',\r\n      tenure: 2,\r\n      dob: new Date(1992, 4, 16),\r\n      receiveEmails: false,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'johns',\r\n      firstName: 'John',\r\n      lastName: 'Smith',\r\n      maritalStatus: 'married',\r\n      occupation: 'Broker',\r\n      userType: 'Chubb Employee',\r\n      tenure: 1,\r\n      dob: new Date(1989, 1, 21),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'janedoe',\r\n      firstName: 'Jane',\r\n      lastName: 'Doe',\r\n      maritalStatus: 'married',\r\n      occupation: 'Adjuster',\r\n      userType: 'Chubb Employee',\r\n      tenure: 2,\r\n      dob: new Date(1990, 2, 22),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'sallymae',\r\n      firstName: 'Sally',\r\n      lastName: 'Mae',\r\n      maritalStatus: 'married',\r\n      occupation: 'Underwriter',\r\n      userType: 'Chubb Employee',\r\n      tenure: 4,\r\n      dob: new Date(1987, 4, 11),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'bobmc',\r\n      firstName: 'Bob',\r\n      lastName: 'McAdams',\r\n      maritalStatus: 'married',\r\n      occupation: 'Agent',\r\n      userType: 'Chubb Employee',\r\n      tenure: 1,\r\n      dob: new Date(1982, 6, 7),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'nancyj',\r\n      firstName: 'Nancy',\r\n      lastName: 'Johnson',\r\n      maritalStatus: 'married',\r\n      occupation: 'Agent',\r\n      userType: 'Chubb Employee',\r\n      tenure: 4,\r\n      dob: new Date(1991, 10, 9),\r\n      receiveEmails: false,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'tomf',\r\n      firstName: 'Tom',\r\n      lastName: 'Finch',\r\n      maritalStatus: 'married',\r\n      occupation: 'Adjuster',\r\n      userType: 'Chubb Employee',\r\n      tenure: 4,\r\n      dob: new Date(1980, 9, 15),\r\n      receiveEmails: false,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'maryl',\r\n      firstName: 'Mary',\r\n      lastName: 'Lewis',\r\n      maritalStatus: 'married',\r\n      occupation: 'Broker',\r\n      userType: 'Chubb Employee',\r\n      tenure: 1,\r\n      dob: new Date(1984, 7, 20),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'peterp',\r\n      firstName: 'Peter',\r\n      lastName: 'Pumpkin',\r\n      maritalStatus: 'married',\r\n      occupation: 'Broker',\r\n      userType: 'Chubb Employee',\r\n      tenure: 3,\r\n      dob: new Date(1988, 11, 13),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'susans',\r\n      firstName: 'Susan',\r\n      lastName: 'Smith',\r\n      maritalStatus: 'married',\r\n      occupation: 'Broker',\r\n      userType: 'Chubb Employee',\r\n      tenure: 2,\r\n      dob: new Date(1993, 12, 10),\r\n      receiveEmails: false,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'jackb',\r\n      firstName: 'Jack',\r\n      lastName: 'Black',\r\n      maritalStatus: 'married',\r\n      occupation: 'Adjuster',\r\n      userType: 'Chubb Employee',\r\n      tenure: 3,\r\n      dob: new Date(1970, 8, 28),\r\n      receiveEmails: false,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'sarag',\r\n      firstName: 'Sara',\r\n      lastName: 'Green',\r\n      maritalStatus: 'married',\r\n      occupation: 'Underwriter',\r\n      userType: 'Chubb Employee',\r\n      tenure: 3,\r\n      dob: new Date(1975, 3, 14),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n    {\r\n      userId: 'brianw',\r\n      firstName: 'Brian',\r\n      lastName: 'White',\r\n      maritalStatus: 'married',\r\n      occupation: 'Agent',\r\n      userType: 'Chubb Employee',\r\n      tenure: 1,\r\n      dob: new Date(1977, 5, 5),\r\n      receiveEmails: true,\r\n      userReport: '../example-user-report',\r\n    },\r\n  ];\r\n  /**\r\n   * @description formats user dob to render\r\n   * @param dateInput  date to format\r\n   * @returns formatted data\r\n   */\r\n  getDate(dateInput: string) {\r\n    const date = new Date(dateInput);\r\n    return [\r\n      [date.getDate(), Month[date.getMonth()]].join(' '),\r\n      date.getFullYear(),\r\n    ].join(', ');\r\n  }\r\n\r\n  onPaginationEvent(event: PaginatorState): void {\r\n    this.first = event.first;\r\n    this.rows = event.rows;\r\n  }\r\n\r\n  onRowEditInit(user: User) {\r\n    user.editing = true;\r\n    this.editableUsers[user.userId as string] = { ...user };\r\n  }\r\n\r\n  onRowEditSave(user: User) {\r\n    user.editing = false;\r\n  }\r\n\r\n  onRowEditCancel(user: User, index: number) {\r\n    this.user[index] = this.editableUsers[user.userId as string];\r\n    delete this.editableUsers[user.userId as string];\r\n    this.user[index].editing = false;\r\n  }\r\n}\r\n\r\n/**\r\n * Enum of Months\r\n */\r\nenum Month {\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n}\r\n\r\n/**\r\n * User Type\r\n */\r\nexport interface User {\r\n  userId?: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  maritalStatus: string;\r\n  occupation: 'Adjuster' | 'Agent' | 'Broker' | 'Underwriter';\r\n  userType: 'Chubb Employee' | 'TPA';\r\n  tenure?: number;\r\n  dob: Date;\r\n  receiveEmails: boolean;\r\n  userReport: string;\r\n  editing?: boolean;\r\n}\n"})})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,C_Users_SPHANDA_Desktop_ui_kit_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.MN)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);